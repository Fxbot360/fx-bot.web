{"ast":null,"code":"var __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport { Image } from 'theme-ui';\nimport { BaseAccordion } from './base-accordion';\nimport accordionIconClose from 'assets/accordion-arrow.svg';\nimport accordionIconOpen from 'assets/accordion-arrow-e.svg';\nimport { AccordionButton, AccordionItem, AccordionContents, single, preventClose, combineReducers } from './shared';\nexport default function Accordion(_ref) {\n  let {\n      items\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"items\"]);\n  const openIcon = __jsx(Image, {\n    src: accordionIconOpen,\n    alt: \"open icon\"\n  });\n  const closeIcon = __jsx(Image, {\n    src: accordionIconClose,\n    alt: \"close icon\"\n  });\n  return __jsx(BaseAccordion, _extends({\n    stateReducer: combineReducers(single, preventClose)\n  }, props), ({\n    openIndexes,\n    handleItemClick\n  }) => __jsx(React.Fragment, null, items.map((item, index) => __jsx(AccordionItem, {\n    key: item.title,\n    isOpen: openIndexes.includes(index)\n  }, __jsx(AccordionButton, {\n    onClick: () => handleItemClick(index)\n  }, __jsx(\"span\", null, openIndexes.includes(index) ? openIcon : closeIcon), item.title), __jsx(AccordionContents, {\n    isOpen: openIndexes.includes(index)\n  }, item.contents)))));\n}","map":null,"metadata":{},"sourceType":"module"}