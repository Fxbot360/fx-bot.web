{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useReducer } from 'react';\nimport { DrawerContext } from './drawer.context';\nvar initialState = {\n  isOpen: false\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isOpen: !state.isOpen\n      });\n    default:\n      return state;\n  }\n}\nexport var DrawerProvider = function DrawerProvider(_ref) {\n  var children = _ref.children;\n  var _useReducer = useReducer(reducer, initialState),\n    state = _useReducer[0],\n    dispatch = _useReducer[1];\n  return __jsx(DrawerContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, children);\n};","map":null,"metadata":{},"sourceType":"module"}