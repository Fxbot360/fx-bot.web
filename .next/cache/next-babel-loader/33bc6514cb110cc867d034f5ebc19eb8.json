{"ast":null,"code":"function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React from 'react';\nclass BaseAccordion extends React.Component {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"state\", {\n      openIndexes: [0]\n    });\n    _defineProperty(this, \"handleItemClick\", index => {\n      this.internalSetState(state => {\n        const closing = state.openIndexes.includes(index);\n        return {\n          type: closing ? 'closing' : 'opening',\n          openIndexes: closing ? state.openIndexes.filter(i => i !== index) : [...state.openIndexes, index]\n        };\n      });\n      console.log('clicked');\n    });\n  }\n  getState(state = this.state) {\n    return {\n      openIndexes: this.props.openIndexes === undefined ? state.openIndexes : this.props.openIndexes\n    };\n  }\n  internalSetState(changes, callback = () => {}) {\n    let allChanges;\n    this.setState(state => {\n      const actualState = this.getState(state);\n      const changesObject = typeof changes === 'function' ? changes(actualState) : changes;\n      allChanges = this.props.stateReducer(actualState, changesObject);\n      return allChanges;\n    }, () => {\n      this.props.onStateChange(allChanges);\n      callback();\n    });\n  }\n  render() {\n    return this.props.children({\n      openIndexes: this.getState().openIndexes,\n      handleItemClick: this.handleItemClick\n    });\n  }\n}\n_defineProperty(BaseAccordion, \"defaultProps\", {\n  stateReducer: (state, changes) => changes,\n  onStateChange: () => {}\n});\nexport { BaseAccordion };","map":{"version":3,"names":["React","BaseAccordion","Component","constructor","args","_defineProperty","openIndexes","index","internalSetState","state","closing","includes","type","filter","i","console","log","getState","props","undefined","changes","callback","allChanges","setState","actualState","changesObject","stateReducer","onStateChange","render","children","handleItemClick"],"sources":["C:/Users/Martins/Documents/Projects/fx-bot.web/src/components/accordion/base-accordion.js"],"sourcesContent":["import React from 'react';\r\n\r\nclass BaseAccordion extends React.Component {\r\n  static defaultProps = {\r\n    stateReducer: (state, changes) => changes,\r\n    onStateChange: () => {},\r\n  };\r\n  state = { openIndexes: [0] };\r\n  getState(state = this.state) {\r\n    return {\r\n      openIndexes:\r\n        this.props.openIndexes === undefined\r\n          ? state.openIndexes\r\n          : this.props.openIndexes,\r\n    };\r\n  }\r\n  internalSetState(changes, callback = () => {}) {\r\n    let allChanges;\r\n    this.setState(\r\n      (state) => {\r\n        const actualState = this.getState(state);\r\n        const changesObject =\r\n          typeof changes === 'function' ? changes(actualState) : changes;\r\n        allChanges = this.props.stateReducer(actualState, changesObject);\r\n        return allChanges;\r\n      },\r\n      () => {\r\n        this.props.onStateChange(allChanges);\r\n        callback();\r\n      }\r\n    );\r\n  }\r\n  handleItemClick = (index) => {\r\n    this.internalSetState((state) => {\r\n      const closing = state.openIndexes.includes(index);\r\n      return {\r\n        type: closing ? 'closing' : 'opening',\r\n        openIndexes: closing\r\n          ? state.openIndexes.filter((i) => i !== index)\r\n          : [...state.openIndexes, index],\r\n      };\r\n    });\r\n    console.log('clicked');\r\n  };\r\n  render() {\r\n    return this.props.children({\r\n      openIndexes: this.getState().openIndexes,\r\n      handleItemClick: this.handleItemClick,\r\n    });\r\n  }\r\n}\r\n\r\nexport { BaseAccordion };\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,SAASD,KAAK,CAACE,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,gBAKlC;MAAEC,WAAW,EAAE,CAAC,CAAC;IAAE,CAAC;IAAAD,eAAA,0BAyBTE,KAAK,IAAK;MAC3B,IAAI,CAACC,gBAAgB,CAAEC,KAAK,IAAK;QAC/B,MAAMC,OAAO,GAAGD,KAAK,CAACH,WAAW,CAACK,QAAQ,CAACJ,KAAK,CAAC;QACjD,OAAO;UACLK,IAAI,EAAEF,OAAO,GAAG,SAAS,GAAG,SAAS;UACrCJ,WAAW,EAAEI,OAAO,GAChBD,KAAK,CAACH,WAAW,CAACO,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKP,KAAK,CAAC,GAC5C,CAAC,GAAGE,KAAK,CAACH,WAAW,EAAEC,KAAK;QAClC,CAAC;MACH,CAAC,CAAC;MACFQ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC;EAAA;EAnCDC,QAAQA,CAACR,KAAK,GAAG,IAAI,CAACA,KAAK,EAAE;IAC3B,OAAO;MACLH,WAAW,EACT,IAAI,CAACY,KAAK,CAACZ,WAAW,KAAKa,SAAS,GAChCV,KAAK,CAACH,WAAW,GACjB,IAAI,CAACY,KAAK,CAACZ;IACnB,CAAC;EACH;EACAE,gBAAgBA,CAACY,OAAO,EAAEC,QAAQ,GAAGA,CAAA,KAAM,CAAC,CAAC,EAAE;IAC7C,IAAIC,UAAU;IACd,IAAI,CAACC,QAAQ,CACVd,KAAK,IAAK;MACT,MAAMe,WAAW,GAAG,IAAI,CAACP,QAAQ,CAACR,KAAK,CAAC;MACxC,MAAMgB,aAAa,GACjB,OAAOL,OAAO,KAAK,UAAU,GAAGA,OAAO,CAACI,WAAW,CAAC,GAAGJ,OAAO;MAChEE,UAAU,GAAG,IAAI,CAACJ,KAAK,CAACQ,YAAY,CAACF,WAAW,EAAEC,aAAa,CAAC;MAChE,OAAOH,UAAU;IACnB,CAAC,EACD,MAAM;MACJ,IAAI,CAACJ,KAAK,CAACS,aAAa,CAACL,UAAU,CAAC;MACpCD,QAAQ,CAAC,CAAC;IACZ,CACF,CAAC;EACH;EAaAO,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACV,KAAK,CAACW,QAAQ,CAAC;MACzBvB,WAAW,EAAE,IAAI,CAACW,QAAQ,CAAC,CAAC,CAACX,WAAW;MACxCwB,eAAe,EAAE,IAAI,CAACA;IACxB,CAAC,CAAC;EACJ;AACF;AAACzB,eAAA,CAhDKJ,aAAa,kBACK;EACpByB,YAAY,EAAEA,CAACjB,KAAK,EAAEW,OAAO,KAAKA,OAAO;EACzCO,aAAa,EAAEA,CAAA,KAAM,CAAC;AACxB,CAAC;AA8CH,SAAS1B,aAAa"},"metadata":{},"sourceType":"module"}