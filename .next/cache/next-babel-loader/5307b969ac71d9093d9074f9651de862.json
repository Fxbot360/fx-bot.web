{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nexports.__esModule = true;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.resolveHref = resolveHref;\nexports.markLoadingError = markLoadingError;\nexports[\"default\"] = void 0;\nvar _normalizeTrailingSlash = require(\"../../../client/normalize-trailing-slash\");\nvar _denormalizePagePath = require(\"../../server/denormalize-page-path\");\nvar _mitt = _interopRequireDefault(require(\"../mitt\"));\nvar _utils = require(\"../utils\");\nvar _isDynamic = require(\"./utils/is-dynamic\");\nvar _parseRelativeUrl = require(\"./utils/parse-relative-url\");\nvar _querystring = require(\"./utils/querystring\");\nvar _resolveRewrites = _interopRequireDefault(require(\"./utils/resolve-rewrites\"));\nvar _routeMatcher = require(\"./utils/route-matcher\");\nvar _routeRegex = require(\"./utils/route-regex\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} /* global __NEXT_DATA__ */ // tslint:disable:no-console\nvar basePath = process.env.__NEXT_ROUTER_BASEPATH || '';\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true\n  });\n}\nfunction hasBasePath(path) {\n  return path === basePath || path.startsWith(basePath + '/');\n}\nfunction addBasePath(path) {\n  // we only add the basepath on relative urls\n  return basePath && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(basePath) : basePath + path : path;\n}\nfunction delBasePath(path) {\n  return path.slice(basePath.length) || '/';\n} /**\n  * Detects whether a given url is routable by the Next.js router (browser only).\n  */\nfunction isLocalURL(url) {\n  if (url.startsWith('/')) return true;\n  try {\n    // absolute urls can be local if they are on the same origin\n    var locationOrigin = (0, _utils.getLocationOrigin)();\n    var resolved = new URL(url, locationOrigin);\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n  } catch (_) {\n    return false;\n  }\n} /**\n  * Resolves a given hyperlink with a certain router state (basePath not included).\n  * Preserves absolute urls.\n  */\nfunction resolveHref(currentPath, href) {\n  // we use a dummy base url for relative urls\n  var base = new URL(currentPath, 'http://n');\n  var urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href);\n  try {\n    var finalUrl = new URL(urlAsString, base);\n    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname); // if the origin didn't change, it means we received a relative href\n    return finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n  } catch (_) {\n    return urlAsString;\n  }\n}\nvar PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR');\nfunction markLoadingError(err) {\n  return Object.defineProperty(err, PAGE_LOAD_ERROR, {});\n}\nfunction prepareUrlAs(router, url, as) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  return {\n    url: addBasePath(resolveHref(router.pathname, url)),\n    as: as ? addBasePath(resolveHref(router.pathname, as)) : as\n  };\n}\nvar manualScrollRestoration = process.env.__NEXT_SCROLL_RESTORATION && true && 'scrollRestoration' in window.history;\nfunction fetchRetry(url, attempts) {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin'\n  }).then(function (res) {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1);\n      }\n      throw new Error(\"Failed to load static props\");\n    }\n    return res.json();\n  });\n}\nfunction fetchNextData(dataHref, isServerRender) {\n  return fetchRetry(dataHref, isServerRender ? 3 : 1)[\"catch\"](function (err) {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      markLoadingError(err);\n    }\n    throw err;\n  });\n}\nvar Router = /*#__PURE__*/function () {\n  /**\n  * Map of all components loaded in `Router`\n  */ // Static Data Cache\n  function Router(_pathname, _query, _as, _ref) {\n    var _this = this;\n    var initialProps = _ref.initialProps,\n      pageLoader = _ref.pageLoader,\n      App = _ref.App,\n      wrapApp = _ref.wrapApp,\n      Component = _ref.Component,\n      initialStyleSheets = _ref.initialStyleSheets,\n      err = _ref.err,\n      subscription = _ref.subscription,\n      isFallback = _ref.isFallback;\n    _classCallCheck(this, Router);\n    this.route = void 0;\n    this.pathname = void 0;\n    this.query = void 0;\n    this.asPath = void 0;\n    this.basePath = void 0;\n    this.components = void 0;\n    this.sdc = {};\n    this.sub = void 0;\n    this.clc = void 0;\n    this.pageLoader = void 0;\n    this._bps = void 0;\n    this.events = void 0;\n    this._wrapApp = void 0;\n    this.isSsr = void 0;\n    this.isFallback = void 0;\n    this._inFlightRoute = void 0;\n    this._shallow = void 0;\n    this.onPopState = function (e) {\n      var state = e.state;\n      if (!state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var _pathname2 = _this.pathname,\n          query = _this.query;\n        _this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: addBasePath(_pathname2),\n          query: query\n        }), (0, _utils.getURL)());\n        return;\n      }\n      if (!state.__N) {\n        return;\n      }\n      var url = state.url,\n        as = state.as,\n        options = state.options;\n      var _ref2 = (0, _parseRelativeUrl.parseRelativeUrl)(url),\n        pathname = _ref2.pathname; // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n      if (_this.isSsr && as === _this.asPath && pathname === _this.pathname) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n      if (_this._bps && !_this._bps(state)) {\n        return;\n      }\n      _this.change('replaceState', url, as, Object.assign({}, options, {\n        shallow: options.shallow && _this._shallow\n      }));\n    }; // represents the current component key\n    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (_pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        styleSheets: initialStyleSheets,\n        props: initialProps,\n        err: err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP\n      };\n    }\n    this.components['/_app'] = {\n      Component: App,\n      styleSheets: [/* /_app does not need its stylesheets managed */]\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = _pathname;\n    this.query = _query; // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n    // @ts-ignore this is temporarily global (attached to window)\n    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as;\n    this.basePath = basePath;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true;\n    this.isFallback = isFallback;\n    if (true) {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (_as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState('replaceState', (0, _utils.formatWithValidation)({\n          pathname: addBasePath(_pathname),\n          query: _query\n        }), (0, _utils.getURL)());\n      }\n      window.addEventListener('popstate', this.onPopState); // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration) {\n          window.history.scrollRestoration = 'manual';\n          var scrollDebounceTimeout;\n          var debouncedScrollSave = function debouncedScrollSave() {\n            if (scrollDebounceTimeout) clearTimeout(scrollDebounceTimeout);\n            scrollDebounceTimeout = setTimeout(function () {\n              var _history$state = history.state,\n                url = _history$state.url,\n                curAs = _history$state.as,\n                options = _history$state.options;\n              _this.changeState('replaceState', url, curAs, Object.assign({}, options, {\n                _N_X: window.scrollX,\n                _N_Y: window.scrollY\n              }));\n            }, 10);\n          };\n          window.addEventListener('scroll', debouncedScrollSave);\n        }\n      }\n    }\n  }\n  _createClass(Router, [{\n    key: \"reload\",\n    value: function reload() {\n      window.location.reload();\n    } /**\n      * Go back in history\n      */\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    } /**\n      * Performs a `pushState` with arguments\n      * @param url of the route\n      * @param as masks `url` for the browser\n      * @param options object you can define `shallow` and other options\n      */\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      ;\n      var _prepareUrlAs = prepareUrlAs(this, url, as);\n      url = _prepareUrlAs.url;\n      as = _prepareUrlAs.as;\n      return this.change('pushState', url, as, options);\n    } /**\n      * Performs a `replaceState` with arguments\n      * @param url of the route\n      * @param as masks `url` for the browser\n      * @param options object you can define `shallow` and other options\n      */\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      ;\n      var _prepareUrlAs2 = prepareUrlAs(this, url, as);\n      url = _prepareUrlAs2.url;\n      as = _prepareUrlAs2.as;\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function () {\n      var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(method, url, as, options) {\n        var _this2 = this;\n        var cleanedAs, pages, _yield$this$pageLoade, rewrites, parsed, _parsed, pathname, searchParams, query, route, _options$shallow, shallow, resolvedAs, _ref3, asPathname, routeRegex, routeMatch, missingParams, routeInfo, error, appComp;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (isLocalURL(url)) {\n                _context.next = 3;\n                break;\n              }\n              window.location.href = url;\n              return _context.abrupt(\"return\", false);\n            case 3:\n              if (!options._h) {\n                this.isSsr = false;\n              } // marking route changes as a navigation start entry\n              if (_utils.ST) {\n                performance.mark('routeChange');\n              }\n              if (this._inFlightRoute) {\n                this.abortComponentLoad(this._inFlightRoute);\n              }\n              cleanedAs = hasBasePath(as) ? delBasePath(as) : as;\n              this._inFlightRoute = as; // If the url change is only related to a hash change\n              // We should not proceed. We should only change the state.\n              // WARNING: `_h` is an internal option for handing Next.js client-side\n              // hydration. Your app should _never_ use this property. It may change at\n              // any time without notice.\n              if (!(!options._h && this.onlyAHashChange(cleanedAs))) {\n                _context.next = 16;\n                break;\n              }\n              this.asPath = cleanedAs;\n              Router.events.emit('hashChangeStart', as); // TODO: do we need the resolved href when only a hash change?\n              this.changeState(method, url, as, options);\n              this.scrollToHash(cleanedAs);\n              this.notify(this.components[this.route]);\n              Router.events.emit('hashChangeComplete', as);\n              return _context.abrupt(\"return\", true);\n            case 16:\n              _context.next = 18;\n              return this.pageLoader.getPageList();\n            case 18:\n              pages = _context.sent;\n              _context.next = 21;\n              return this.pageLoader.promisedBuildManifest;\n            case 21:\n              _yield$this$pageLoade = _context.sent;\n              rewrites = _yield$this$pageLoade.__rewrites;\n              parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);\n              _parsed = parsed, pathname = _parsed.pathname, searchParams = _parsed.searchParams;\n              parsed = this._resolveHref(parsed, pages);\n              if (parsed.pathname !== pathname) {\n                pathname = parsed.pathname;\n                url = (0, _utils.formatWithValidation)(parsed);\n              }\n              query = (0, _querystring.searchParamsToUrlQuery)(searchParams); // url and as should always be prefixed with basePath by this\n              // point by either next/link or router.push/replace so strip the\n              // basePath from the pathname to match the pages dir 1-to-1\n              pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname; // If asked to change the current URL we should reload the current page\n              // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n              // We also need to set the method = replaceState always\n              // as this should not go into the history (That's how browsers work)\n              // We should compare the new asPath to the current asPath, not the url\n              if (!this.urlIsNew(cleanedAs)) {\n                method = 'replaceState';\n              }\n              route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);\n              _options$shallow = options.shallow, shallow = _options$shallow === void 0 ? false : _options$shallow; // we need to resolve the as value using rewrites for dynamic SSG\n              // pages to allow building the data URL correctly\n              resolvedAs = as;\n              if (process.env.__NEXT_HAS_REWRITES) {\n                resolvedAs = (0, _resolveRewrites[\"default\"])(as, pages, basePath, rewrites, query, function (p) {\n                  return _this2._resolveHref({\n                    pathname: p\n                  }, pages).pathname;\n                });\n              }\n              resolvedAs = delBasePath(resolvedAs);\n              if (!(0, _isDynamic.isDynamicRoute)(route)) {\n                _context.next = 47;\n                break;\n              }\n              _ref3 = (0, _parseRelativeUrl.parseRelativeUrl)(resolvedAs), asPathname = _ref3.pathname;\n              routeRegex = (0, _routeRegex.getRouteRegex)(route);\n              routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);\n              if (routeMatch) {\n                _context.next = 46;\n                break;\n              }\n              missingParams = Object.keys(routeRegex.groups).filter(function (param) {\n                return !query[param];\n              });\n              if (!(missingParams.length > 0)) {\n                _context.next = 44;\n                break;\n              }\n              if (true) {\n                console.warn(\"Mismatching `as` and `href` failed to manually provide \" + \"the params: \".concat(missingParams.join(', '), \" in the `href`'s `query`\"));\n              }\n              throw new Error(\"The provided `as` value (\".concat(asPathname, \") is incompatible with the `href` value (\").concat(route, \"). \") + \"Read more: https://err.sh/vercel/next.js/incompatible-href-as\");\n            case 44:\n              _context.next = 47;\n              break;\n            case 46:\n              // Merge params into `query`, overwriting any specified in search\n              Object.assign(query, routeMatch);\n            case 47:\n              Router.events.emit('routeChangeStart', as);\n              _context.prev = 48;\n              _context.next = 51;\n              return this.getRouteInfo(route, pathname, query, as, shallow);\n            case 51:\n              routeInfo = _context.sent;\n              error = routeInfo.error;\n              Router.events.emit('beforeHistoryChange', as);\n              this.changeState(method, url, as, options);\n              if (true) {\n                appComp = this.components['/_app'].Component;\n                window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;\n              }\n              _context.next = 58;\n              return this.set(route, pathname, query, cleanedAs, routeInfo)[\"catch\"](function (e) {\n                if (e.cancelled) error = error || e;else throw e;\n              });\n            case 58:\n              if (!error) {\n                _context.next = 61;\n                break;\n              }\n              Router.events.emit('routeChangeError', error, cleanedAs);\n              throw error;\n            case 61:\n              if (process.env.__NEXT_SCROLL_RESTORATION) {\n                if (manualScrollRestoration && '_N_X' in options) {\n                  window.scrollTo(options._N_X, options._N_Y);\n                }\n              }\n              Router.events.emit('routeChangeComplete', as);\n              return _context.abrupt(\"return\", true);\n            case 66:\n              _context.prev = 66;\n              _context.t0 = _context[\"catch\"](48);\n              if (!_context.t0.cancelled) {\n                _context.next = 70;\n                break;\n              }\n              return _context.abrupt(\"return\", false);\n            case 70:\n              throw _context.t0;\n            case 71:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[48, 66]]);\n      }));\n      function change(_x, _x2, _x3, _x4) {\n        return _change.apply(this, arguments);\n      }\n      return change;\n    }()\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (true) {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n      if (method !== 'pushState' || (0, _utils.getURL)() !== as) {\n        this._shallow = options.shallow;\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options,\n          __N: true\n        },\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '', as);\n      }\n    }\n  }, {\n    key: \"handleRouteInfoError\",\n    value: function () {\n      var _handleRouteInfoError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(err, pathname, query, as, loadErrorFail) {\n        var _yield$this$fetchComp, Component, styleSheets, routeInfo;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!err.cancelled) {\n                _context2.next = 2;\n                break;\n              }\n              throw err;\n            case 2:\n              if (!(PAGE_LOAD_ERROR in err || loadErrorFail)) {\n                _context2.next = 6;\n                break;\n              }\n              Router.events.emit('routeChangeError', err, as); // If we can't load the page it could be one of following reasons\n              //  1. Page doesn't exists\n              //  2. Page does exist in a different zone\n              //  3. Internal error while loading the page\n              // So, doing a hard reload is the proper way to deal with this.\n              window.location.href = as; // Changing the URL doesn't block executing the current code path.\n              // So let's throw a cancellation error stop the routing logic.\n              throw buildCancellationError();\n            case 6:\n              _context2.prev = 6;\n              _context2.next = 9;\n              return this.fetchComponent('/_error');\n            case 9:\n              _yield$this$fetchComp = _context2.sent;\n              Component = _yield$this$fetchComp.page;\n              styleSheets = _yield$this$fetchComp.styleSheets;\n              routeInfo = {\n                Component: Component,\n                styleSheets: styleSheets,\n                err: err,\n                error: err\n              };\n              _context2.prev = 13;\n              _context2.next = 16;\n              return this.getInitialProps(Component, {\n                err: err,\n                pathname: pathname,\n                query: query\n              });\n            case 16:\n              routeInfo.props = _context2.sent;\n              _context2.next = 23;\n              break;\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](13);\n              console.error('Error in error page `getInitialProps`: ', _context2.t0);\n              routeInfo.props = {};\n            case 23:\n              return _context2.abrupt(\"return\", routeInfo);\n            case 26:\n              _context2.prev = 26;\n              _context2.t1 = _context2[\"catch\"](6);\n              return _context2.abrupt(\"return\", this.handleRouteInfoError(_context2.t1, pathname, query, as, true));\n            case 29:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[6, 26], [13, 19]]);\n      }));\n      function handleRouteInfoError(_x5, _x6, _x7, _x8, _x9) {\n        return _handleRouteInfoError.apply(this, arguments);\n      }\n      return handleRouteInfoError;\n    }()\n  }, {\n    key: \"getRouteInfo\",\n    value: function () {\n      var _getRouteInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(route, pathname, query, as) {\n        var _this3 = this;\n        var shallow,\n          cachedRouteInfo,\n          routeInfo,\n          Component,\n          __N_SSG,\n          __N_SSP,\n          _require,\n          isValidElementType,\n          dataHref,\n          props,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              shallow = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : false;\n              _context3.prev = 1;\n              cachedRouteInfo = this.components[route];\n              if (!(shallow && cachedRouteInfo && this.route === route)) {\n                _context3.next = 5;\n                break;\n              }\n              return _context3.abrupt(\"return\", cachedRouteInfo);\n            case 5:\n              if (!cachedRouteInfo) {\n                _context3.next = 9;\n                break;\n              }\n              _context3.t0 = cachedRouteInfo;\n              _context3.next = 12;\n              break;\n            case 9:\n              _context3.next = 11;\n              return this.fetchComponent(route).then(function (res) {\n                return {\n                  Component: res.page,\n                  styleSheets: res.styleSheets,\n                  __N_SSG: res.mod.__N_SSG,\n                  __N_SSP: res.mod.__N_SSP\n                };\n              });\n            case 11:\n              _context3.t0 = _context3.sent;\n            case 12:\n              routeInfo = _context3.t0;\n              Component = routeInfo.Component, __N_SSG = routeInfo.__N_SSG, __N_SSP = routeInfo.__N_SSP;\n              if (!true) {\n                _context3.next = 18;\n                break;\n              }\n              _require = require('react-is'), isValidElementType = _require.isValidElementType;\n              if (isValidElementType(Component)) {\n                _context3.next = 18;\n                break;\n              }\n              throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n            case 18:\n              if (__N_SSG || __N_SSP) {\n                dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({\n                  pathname: pathname,\n                  query: query\n                }), delBasePath(as), __N_SSG);\n              }\n              _context3.next = 21;\n              return this._getData(function () {\n                return __N_SSG ? _this3._getStaticData(dataHref) : __N_SSP ? _this3._getServerData(dataHref) : _this3.getInitialProps(Component,\n                // we provide AppTree later so this needs to be `any`\n                {\n                  pathname: pathname,\n                  query: query,\n                  asPath: as\n                });\n              });\n            case 21:\n              props = _context3.sent;\n              routeInfo.props = props;\n              this.components[route] = routeInfo;\n              return _context3.abrupt(\"return\", routeInfo);\n            case 27:\n              _context3.prev = 27;\n              _context3.t1 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", this.handleRouteInfoError(_context3.t1, pathname, query, as));\n            case 30:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[1, 27]]);\n      }));\n      function getRouteInfo(_x10, _x11, _x12, _x13) {\n        return _getRouteInfo.apply(this, arguments);\n      }\n      return getRouteInfo;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data) {\n      this.isFallback = false;\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      return this.notify(data);\n    } /**\n      * Callback to execute before replacing router state\n      * @param cb callback to be executed\n      */\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n      var _this$asPath$split = this.asPath.split('#'),\n        _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),\n        oldUrlNoHash = _this$asPath$split2[0],\n        oldHash = _this$asPath$split2[1];\n      var _as$split = as.split('#'),\n        _as$split2 = _slicedToArray(_as$split, 2),\n        newUrlNoHash = _as$split2[0],\n        newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      } // If the urls are change, there's more than a hash change\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      } // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n        _as$split4 = _slicedToArray(_as$split3, 2),\n        hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value\n      if (hash === '') {\n        window.scrollTo(0, 0);\n        return;\n      } // First we check if the element by id is found\n      var idEl = document.getElementById(hash);\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      } // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n      var nameEl = document.getElementsByName(hash)[0];\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    }\n  }, {\n    key: \"_resolveHref\",\n    value: function _resolveHref(parsedHref, pages) {\n      var pathname = parsedHref.pathname;\n      var cleanPathname = (0, _denormalizePagePath.denormalizePagePath)(delBasePath(pathname));\n      if (cleanPathname === '/404' || cleanPathname === '/_error') {\n        return parsedHref;\n      } // handle resolving href for dynamic routes\n      if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some(function (page) {\n          if ((0, _isDynamic.isDynamicRoute)(page) && (0, _routeRegex.getRouteRegex)(page).re.test(cleanPathname)) {\n            parsedHref.pathname = addBasePath(page);\n            return true;\n          }\n        });\n      }\n      return parsedHref;\n    } /**\n      * Prefetch page code, you may wait for the data during page rendering.\n      * This feature only works in production!\n      * @param url the href of prefetched page\n      * @param asPath the as path of the prefetched page\n      */\n  }, {\n    key: \"prefetch\",\n    value: function () {\n      var _prefetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(url) {\n        var asPath,\n          options,\n          parsed,\n          _parsed2,\n          pathname,\n          pages,\n          route,\n          _args4 = arguments;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              asPath = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : url;\n              options = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n              parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);\n              _parsed2 = parsed, pathname = _parsed2.pathname;\n              _context4.next = 6;\n              return this.pageLoader.getPageList();\n            case 6:\n              pages = _context4.sent;\n              parsed = this._resolveHref(parsed, pages);\n              if (parsed.pathname !== pathname) {\n                pathname = parsed.pathname;\n                url = (0, _utils.formatWithValidation)(parsed);\n              } // Prefetch is not supported in development mode because it would trigger on-demand-entries\n              if (!true) {\n                _context4.next = 11;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 11:\n              route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);\n              _context4.next = 14;\n              return Promise.all([this.pageLoader.prefetchData(url, asPath), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function prefetch(_x14) {\n        return _prefetch.apply(this, arguments);\n      }\n      return prefetch;\n    }()\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(route) {\n        var cancelled, cancel, componentResult, error;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              cancelled = false;\n              cancel = this.clc = function () {\n                cancelled = true;\n              };\n              _context5.next = 4;\n              return this.pageLoader.loadPage(route);\n            case 4:\n              componentResult = _context5.sent;\n              if (!cancelled) {\n                _context5.next = 9;\n                break;\n              }\n              error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n              error.cancelled = true;\n              throw error;\n            case 9:\n              if (cancel === this.clc) {\n                this.clc = null;\n              }\n              return _context5.abrupt(\"return\", componentResult);\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function fetchComponent(_x15) {\n        return _fetchComponent.apply(this, arguments);\n      }\n      return fetchComponent;\n    }()\n  }, {\n    key: \"_getData\",\n    value: function _getData(fn) {\n      var _this4 = this;\n      var cancelled = false;\n      var cancel = function cancel() {\n        cancelled = true;\n      };\n      this.clc = cancel;\n      return fn().then(function (data) {\n        if (cancel === _this4.clc) {\n          _this4.clc = null;\n        }\n        if (cancelled) {\n          var err = new Error('Loading initial props cancelled');\n          err.cancelled = true;\n          throw err;\n        }\n        return data;\n      });\n    }\n  }, {\n    key: \"_getStaticData\",\n    value: function _getStaticData(dataHref) {\n      var _this5 = this;\n      var _URL = new URL(dataHref, window.location.href),\n        cacheKey = _URL.href;\n      if (false && this.sdc[cacheKey]) {\n        return Promise.resolve(this.sdc[cacheKey]);\n      }\n      return fetchNextData(dataHref, this.isSsr).then(function (data) {\n        _this5.sdc[cacheKey] = data;\n        return data;\n      });\n    }\n  }, {\n    key: \"_getServerData\",\n    value: function _getServerData(dataHref) {\n      return fetchNextData(dataHref, this.isSsr);\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps(Component, ctx) {\n      var App = this.components['/_app'].Component;\n      var AppTree = this._wrapApp(App);\n      ctx.AppTree = AppTree;\n      return (0, _utils.loadGetInitialProps)(App, {\n        AppTree: AppTree,\n        Component: Component,\n        router: this,\n        ctx: ctx\n      });\n    }\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as) {\n      if (this.clc) {\n        Router.events.emit('routeChangeError', buildCancellationError(), as);\n        this.clc();\n        this.clc = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data) {\n      return this.sub(data, this.components['/_app'].Component);\n    }\n  }]);\n  return Router;\n}();\nexports[\"default\"] = Router;\nRouter.events = (0, _mitt[\"default\"])();","map":{"version":3,"sources":["../../../../next-server/lib/router/router.ts"],"names":["basePath","process","env","__NEXT_ROUTER_BASEPATH","buildCancellationError","Object","assign","Error","cancelled","hasBasePath","path","startsWith","addBasePath","delBasePath","slice","length","isLocalURL","url","locationOrigin","resolved","URL","origin","pathname","_","resolveHref","currentPath","href","base","urlAsString","finalUrl","PAGE_LOAD_ERROR","Symbol","markLoadingError","err","defineProperty","prepareUrlAs","router","as","manualScrollRestoration","__NEXT_SCROLL_RESTORATION","window","history","fetchRetry","attempts","credentials","then","res","ok","status","json","fetchNextData","dataHref","isServerRender","Router","route","query","asPath","components","sdc","sub","clc","pageLoader","_bps","events","_wrapApp","isSsr","isFallback","_inFlightRoute","_shallow","constructor","initialProps","App","wrapApp","Component","initialStyleSheets","subscription","styleSheets","props","__N_SSG","__N_SSP","__NEXT_DATA__","autoExport","substr","changeState","addEventListener","onPopState","scrollRestoration","scrollDebounceTimeout","debouncedScrollSave","clearTimeout","setTimeout","curAs","options","state","_N_X","scrollX","_N_Y","scrollY","e","__N","change","shallow","reload","location","back","push","replace","method","_h","ST","performance","mark","abortComponentLoad","cleanedAs","onlyAHashChange","emit","scrollToHash","notify","pages","getPageList","__rewrites","rewrites","promisedBuildManifest","parsed","searchParams","_resolveHref","urlIsNew","resolvedAs","__NEXT_HAS_REWRITES","p","asPathname","routeRegex","routeMatch","missingParams","keys","groups","filter","param","console","warn","join","routeInfo","getRouteInfo","error","appComp","next","isPrerendered","getInitialProps","origGetInitialProps","set","scrollTo","loadErrorFail","page","fetchComponent","handleRouteInfoError","cachedRouteInfo","mod","isValidElementType","require","getDataHref","_getData","_getStaticData","_getServerData","data","beforePopState","cb","oldUrlNoHash","oldHash","split","newUrlNoHash","newHash","hash","idEl","document","getElementById","scrollIntoView","nameEl","getElementsByName","parsedHref","cleanPathname","includes","some","re","test","Promise","all","prefetchData","priority","cancel","componentResult","loadPage","fn","cacheKey","resolve","ctx","AppTree"],"mappings":"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","sourcesContent":["/* global __NEXT_DATA__ */\n// tslint:disable:no-console\nimport { ParsedUrlQuery } from 'querystring'\nimport { ComponentType } from 'react'\nimport { UrlObject } from 'url'\nimport {\n  normalizePathTrailingSlash,\n  removePathTrailingSlash,\n} from '../../../client/normalize-trailing-slash'\nimport { GoodPageCache, StyleSheetTuple } from '../../../client/page-loader'\nimport { denormalizePagePath } from '../../server/denormalize-page-path'\nimport mitt, { MittEmitter } from '../mitt'\nimport {\n  AppContextType,\n  formatWithValidation,\n  getLocationOrigin,\n  getURL,\n  loadGetInitialProps,\n  NextPageContext,\n  ST,\n} from '../utils'\nimport { isDynamicRoute } from './utils/is-dynamic'\nimport { parseRelativeUrl } from './utils/parse-relative-url'\nimport { searchParamsToUrlQuery } from './utils/querystring'\nimport resolveRewrites from './utils/resolve-rewrites'\nimport { getRouteMatcher } from './utils/route-matcher'\nimport { getRouteRegex } from './utils/route-regex'\n\ninterface TransitionOptions {\n  shallow?: boolean\n}\n\ninterface NextHistoryState {\n  url: string\n  as: string\n  options: TransitionOptions\n}\n\ntype HistoryState = null | { __N: false } | ({ __N: true } & NextHistoryState)\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true,\n  })\n}\n\nexport function hasBasePath(path: string): boolean {\n  return path === basePath || path.startsWith(basePath + '/')\n}\n\nexport function addBasePath(path: string): string {\n  // we only add the basepath on relative urls\n  return basePath && path.startsWith('/')\n    ? path === '/'\n      ? normalizePathTrailingSlash(basePath)\n      : basePath + path\n    : path\n}\n\nexport function delBasePath(path: string): string {\n  return path.slice(basePath.length) || '/'\n}\n\n/**\n * Detects whether a given url is routable by the Next.js router (browser only).\n */\nexport function isLocalURL(url: string): boolean {\n  if (url.startsWith('/')) return true\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = getLocationOrigin()\n    const resolved = new URL(url, locationOrigin)\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname)\n  } catch (_) {\n    return false\n  }\n}\n\ntype Url = UrlObject | string\n\n/**\n * Resolves a given hyperlink with a certain router state (basePath not included).\n * Preserves absolute urls.\n */\nexport function resolveHref(currentPath: string, href: Url): string {\n  // we use a dummy base url for relative urls\n  const base = new URL(currentPath, 'http://n')\n  const urlAsString =\n    typeof href === 'string' ? href : formatWithValidation(href)\n  try {\n    const finalUrl = new URL(urlAsString, base)\n    finalUrl.pathname = normalizePathTrailingSlash(finalUrl.pathname)\n    // if the origin didn't change, it means we received a relative href\n    return finalUrl.origin === base.origin\n      ? finalUrl.href.slice(finalUrl.origin.length)\n      : finalUrl.href\n  } catch (_) {\n    return urlAsString\n  }\n}\n\nconst PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR')\nexport function markLoadingError(err: Error): Error {\n  return Object.defineProperty(err, PAGE_LOAD_ERROR, {})\n}\n\nfunction prepareUrlAs(router: NextRouter, url: Url, as: Url) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  return {\n    url: addBasePath(resolveHref(router.pathname, url)),\n    as: as ? addBasePath(resolveHref(router.pathname, as)) : as,\n  }\n}\n\nexport type BaseRouter = {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n}\n\nexport type NextRouter = BaseRouter &\n  Pick<\n    Router,\n    | 'push'\n    | 'replace'\n    | 'reload'\n    | 'back'\n    | 'prefetch'\n    | 'beforePopState'\n    | 'events'\n    | 'isFallback'\n  >\n\nexport type PrefetchOptions = {\n  priority?: boolean\n}\n\nexport type PrivateRouteInfo = {\n  Component: ComponentType\n  styleSheets: StyleSheetTuple[]\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n  props?: Record<string, any>\n  err?: Error\n  error?: any\n}\n\nexport type AppProps = Pick<PrivateRouteInfo, 'Component' | 'err'> & {\n  router: Router\n} & Record<string, any>\nexport type AppComponent = ComponentType<AppProps>\n\ntype Subscription = (data: PrivateRouteInfo, App: AppComponent) => Promise<void>\n\ntype BeforePopStateCallback = (state: NextHistoryState) => boolean\n\ntype ComponentLoadCancel = (() => void) | null\n\ntype HistoryMethod = 'replaceState' | 'pushState'\n\nconst manualScrollRestoration =\n  process.env.__NEXT_SCROLL_RESTORATION &&\n  typeof window !== 'undefined' &&\n  'scrollRestoration' in window.history\n\nfunction fetchRetry(url: string, attempts: number): Promise<any> {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin',\n  }).then((res) => {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1)\n      }\n      throw new Error(`Failed to load static props`)\n    }\n\n    return res.json()\n  })\n}\n\nfunction fetchNextData(dataHref: string, isServerRender: boolean) {\n  return fetchRetry(dataHref, isServerRender ? 3 : 1).catch((err: Error) => {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      markLoadingError(err)\n    }\n    throw err\n  })\n}\n\nexport default class Router implements BaseRouter {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n\n  /**\n   * Map of all components loaded in `Router`\n   */\n  components: { [pathname: string]: PrivateRouteInfo }\n  // Static Data Cache\n  sdc: { [asPath: string]: object } = {}\n  sub: Subscription\n  clc: ComponentLoadCancel\n  pageLoader: any\n  _bps: BeforePopStateCallback | undefined\n  events: MittEmitter\n  _wrapApp: (App: AppComponent) => any\n  isSsr: boolean\n  isFallback: boolean\n  _inFlightRoute?: string\n  _shallow?: boolean\n\n  static events: MittEmitter = mitt()\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    {\n      initialProps,\n      pageLoader,\n      App,\n      wrapApp,\n      Component,\n      initialStyleSheets,\n      err,\n      subscription,\n      isFallback,\n    }: {\n      subscription: Subscription\n      initialProps: any\n      pageLoader: any\n      Component: ComponentType\n      initialStyleSheets: StyleSheetTuple[]\n      App: AppComponent\n      wrapApp: (App: AppComponent) => any\n      err?: Error\n      isFallback: boolean\n    }\n  ) {\n    // represents the current component key\n    this.route = removePathTrailingSlash(pathname)\n\n    // set up the component cache (by route keys)\n    this.components = {}\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component,\n        styleSheets: initialStyleSheets,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n      }\n    }\n\n    this.components['/_app'] = {\n      Component: App as ComponentType,\n      styleSheets: [\n        /* /_app does not need its stylesheets managed */\n      ],\n    }\n\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events\n\n    this.pageLoader = pageLoader\n    this.pathname = pathname\n    this.query = query\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n      // @ts-ignore this is temporarily global (attached to window)\n      isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as\n    this.basePath = basePath\n    this.sub = subscription\n    this.clc = null\n    this._wrapApp = wrapApp\n    // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true\n\n    this.isFallback = isFallback\n\n    if (typeof window !== 'undefined') {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState(\n          'replaceState',\n          formatWithValidation({ pathname: addBasePath(pathname), query }),\n          getURL()\n        )\n      }\n\n      window.addEventListener('popstate', this.onPopState)\n\n      // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration) {\n          window.history.scrollRestoration = 'manual'\n\n          let scrollDebounceTimeout: undefined | NodeJS.Timeout\n\n          const debouncedScrollSave = () => {\n            if (scrollDebounceTimeout) clearTimeout(scrollDebounceTimeout)\n\n            scrollDebounceTimeout = setTimeout(() => {\n              const { url, as: curAs, options } = history.state\n              this.changeState(\n                'replaceState',\n                url,\n                curAs,\n                Object.assign({}, options, {\n                  _N_X: window.scrollX,\n                  _N_Y: window.scrollY,\n                })\n              )\n            }, 10)\n          }\n\n          window.addEventListener('scroll', debouncedScrollSave)\n        }\n      }\n    }\n  }\n\n  onPopState = (e: PopStateEvent): void => {\n    const state = e.state as HistoryState\n\n    if (!state) {\n      // We get state as undefined for two reasons.\n      //  1. With older safari (< 8) and older chrome (< 34)\n      //  2. When the URL changed with #\n      //\n      // In the both cases, we don't need to proceed and change the route.\n      // (as it's already changed)\n      // But we can simply replace the state with the new changes.\n      // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n      // So, doing the following for (1) does no harm.\n      const { pathname, query } = this\n      this.changeState(\n        'replaceState',\n        formatWithValidation({ pathname: addBasePath(pathname), query }),\n        getURL()\n      )\n      return\n    }\n\n    if (!state.__N) {\n      return\n    }\n\n    const { url, as, options } = state\n\n    const { pathname } = parseRelativeUrl(url)\n\n    // Make sure we don't re-render on initial load,\n    // can be caused by navigating back from an external site\n    if (this.isSsr && as === this.asPath && pathname === this.pathname) {\n      return\n    }\n\n    // If the downstream application returns falsy, return.\n    // They will then be responsible for handling the event.\n    if (this._bps && !this._bps(state)) {\n      return\n    }\n\n    this.change(\n      'replaceState',\n      url,\n      as,\n      Object.assign({}, options, {\n        shallow: options.shallow && this._shallow,\n      })\n    )\n  }\n\n  reload(): void {\n    window.location.reload()\n  }\n\n  /**\n   * Go back in history\n   */\n  back() {\n    window.history.back()\n  }\n\n  /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  push(url: Url, as: Url = url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('pushState', url, as, options)\n  }\n\n  /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  replace(url: Url, as: Url = url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('replaceState', url, as, options)\n  }\n\n  async change(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions\n  ): Promise<boolean> {\n    if (!isLocalURL(url)) {\n      window.location.href = url\n      return false\n    }\n\n    if (!(options as any)._h) {\n      this.isSsr = false\n    }\n    // marking route changes as a navigation start entry\n    if (ST) {\n      performance.mark('routeChange')\n    }\n\n    if (this._inFlightRoute) {\n      this.abortComponentLoad(this._inFlightRoute)\n    }\n\n    const cleanedAs = hasBasePath(as) ? delBasePath(as) : as\n    this._inFlightRoute = as\n\n    // If the url change is only related to a hash change\n    // We should not proceed. We should only change the state.\n\n    // WARNING: `_h` is an internal option for handing Next.js client-side\n    // hydration. Your app should _never_ use this property. It may change at\n    // any time without notice.\n    if (!(options as any)._h && this.onlyAHashChange(cleanedAs)) {\n      this.asPath = cleanedAs\n      Router.events.emit('hashChangeStart', as)\n      // TODO: do we need the resolved href when only a hash change?\n      this.changeState(method, url, as, options)\n      this.scrollToHash(cleanedAs)\n      this.notify(this.components[this.route])\n      Router.events.emit('hashChangeComplete', as)\n      return true\n    }\n\n    // The build manifest needs to be loaded before auto-static dynamic pages\n    // get their query parameters to allow ensuring they can be parsed properly\n    // when rewritten to\n    const pages = await this.pageLoader.getPageList()\n    const { __rewrites: rewrites } = await this.pageLoader.promisedBuildManifest\n\n    let parsed = parseRelativeUrl(url)\n\n    let { pathname, searchParams } = parsed\n\n    parsed = this._resolveHref(parsed, pages) as typeof parsed\n\n    if (parsed.pathname !== pathname) {\n      pathname = parsed.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    const query = searchParamsToUrlQuery(searchParams)\n\n    // url and as should always be prefixed with basePath by this\n    // point by either next/link or router.push/replace so strip the\n    // basePath from the pathname to match the pages dir 1-to-1\n    pathname = pathname\n      ? removePathTrailingSlash(delBasePath(pathname))\n      : pathname\n\n    // If asked to change the current URL we should reload the current page\n    // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n    // We also need to set the method = replaceState always\n    // as this should not go into the history (That's how browsers work)\n    // We should compare the new asPath to the current asPath, not the url\n    if (!this.urlIsNew(cleanedAs)) {\n      method = 'replaceState'\n    }\n\n    const route = removePathTrailingSlash(pathname)\n    const { shallow = false } = options\n\n    // we need to resolve the as value using rewrites for dynamic SSG\n    // pages to allow building the data URL correctly\n    let resolvedAs = as\n\n    if (process.env.__NEXT_HAS_REWRITES) {\n      resolvedAs = resolveRewrites(\n        as,\n        pages,\n        basePath,\n        rewrites,\n        query,\n        (p: string) => this._resolveHref({ pathname: p }, pages).pathname!\n      )\n    }\n    resolvedAs = delBasePath(resolvedAs)\n\n    if (isDynamicRoute(route)) {\n      const { pathname: asPathname } = parseRelativeUrl(resolvedAs)\n      const routeRegex = getRouteRegex(route)\n      const routeMatch = getRouteMatcher(routeRegex)(asPathname)\n      if (!routeMatch) {\n        const missingParams = Object.keys(routeRegex.groups).filter(\n          (param) => !query[param]\n        )\n\n        if (missingParams.length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `Mismatching \\`as\\` and \\`href\\` failed to manually provide ` +\n                `the params: ${missingParams.join(\n                  ', '\n                )} in the \\`href\\`'s \\`query\\``\n            )\n          }\n\n          throw new Error(\n            `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). ` +\n              `Read more: https://err.sh/vercel/next.js/incompatible-href-as`\n          )\n        }\n      } else {\n        // Merge params into `query`, overwriting any specified in search\n        Object.assign(query, routeMatch)\n      }\n    }\n\n    Router.events.emit('routeChangeStart', as)\n\n    try {\n      const routeInfo = await this.getRouteInfo(\n        route,\n        pathname,\n        query,\n        as,\n        shallow\n      )\n      let { error } = routeInfo\n\n      Router.events.emit('beforeHistoryChange', as)\n      this.changeState(method, url, as, options)\n\n      if (process.env.NODE_ENV !== 'production') {\n        const appComp: any = this.components['/_app'].Component\n        ;(window as any).next.isPrerendered =\n          appComp.getInitialProps === appComp.origGetInitialProps &&\n          !(routeInfo.Component as any).getInitialProps\n      }\n\n      await this.set(route, pathname!, query, cleanedAs, routeInfo).catch(\n        (e) => {\n          if (e.cancelled) error = error || e\n          else throw e\n        }\n      )\n\n      if (error) {\n        Router.events.emit('routeChangeError', error, cleanedAs)\n        throw error\n      }\n\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration && '_N_X' in options) {\n          window.scrollTo((options as any)._N_X, (options as any)._N_Y)\n        }\n      }\n      Router.events.emit('routeChangeComplete', as)\n\n      return true\n    } catch (err) {\n      if (err.cancelled) {\n        return false\n      }\n      throw err\n    }\n  }\n\n  changeState(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions = {}\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`)\n        return\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`)\n        return\n      }\n    }\n\n    if (method !== 'pushState' || getURL() !== as) {\n      this._shallow = options.shallow\n      window.history[method](\n        {\n          url,\n          as,\n          options,\n          __N: true,\n        } as HistoryState,\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '',\n        as\n      )\n    }\n  }\n\n  async handleRouteInfoError(\n    err: Error & { code: any; cancelled: boolean },\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    loadErrorFail?: boolean\n  ): Promise<PrivateRouteInfo> {\n    if (err.cancelled) {\n      // bubble up cancellation errors\n      throw err\n    }\n\n    if (PAGE_LOAD_ERROR in err || loadErrorFail) {\n      Router.events.emit('routeChangeError', err, as)\n\n      // If we can't load the page it could be one of following reasons\n      //  1. Page doesn't exists\n      //  2. Page does exist in a different zone\n      //  3. Internal error while loading the page\n\n      // So, doing a hard reload is the proper way to deal with this.\n      window.location.href = as\n\n      // Changing the URL doesn't block executing the current code path.\n      // So let's throw a cancellation error stop the routing logic.\n      throw buildCancellationError()\n    }\n\n    try {\n      const { page: Component, styleSheets } = await this.fetchComponent(\n        '/_error'\n      )\n      const routeInfo: PrivateRouteInfo = {\n        Component,\n        styleSheets,\n        err,\n        error: err,\n      }\n\n      try {\n        routeInfo.props = await this.getInitialProps(Component, {\n          err,\n          pathname,\n          query,\n        } as any)\n      } catch (gipErr) {\n        console.error('Error in error page `getInitialProps`: ', gipErr)\n        routeInfo.props = {}\n      }\n\n      return routeInfo\n    } catch (routeInfoErr) {\n      return this.handleRouteInfoError(routeInfoErr, pathname, query, as, true)\n    }\n  }\n\n  async getRouteInfo(\n    route: string,\n    pathname: string,\n    query: any,\n    as: string,\n    shallow: boolean = false\n  ): Promise<PrivateRouteInfo> {\n    try {\n      const cachedRouteInfo = this.components[route]\n\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return cachedRouteInfo\n      }\n\n      const routeInfo: PrivateRouteInfo = cachedRouteInfo\n        ? cachedRouteInfo\n        : await this.fetchComponent(route).then((res) => ({\n            Component: res.page,\n            styleSheets: res.styleSheets,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP,\n          }))\n\n      const { Component, __N_SSG, __N_SSP } = routeInfo\n\n      if (process.env.NODE_ENV !== 'production') {\n        const { isValidElementType } = require('react-is')\n        if (!isValidElementType(Component)) {\n          throw new Error(\n            `The default export is not a React Component in page: \"${pathname}\"`\n          )\n        }\n      }\n\n      let dataHref: string | undefined\n\n      if (__N_SSG || __N_SSP) {\n        dataHref = this.pageLoader.getDataHref(\n          formatWithValidation({ pathname, query }),\n          delBasePath(as),\n          __N_SSG\n        )\n      }\n\n      const props = await this._getData<PrivateRouteInfo>(() =>\n        __N_SSG\n          ? this._getStaticData(dataHref!)\n          : __N_SSP\n          ? this._getServerData(dataHref!)\n          : this.getInitialProps(\n              Component,\n              // we provide AppTree later so this needs to be `any`\n              {\n                pathname,\n                query,\n                asPath: as,\n              } as any\n            )\n      )\n      routeInfo.props = props\n      this.components[route] = routeInfo\n      return routeInfo\n    } catch (err) {\n      return this.handleRouteInfoError(err, pathname, query, as)\n    }\n  }\n\n  set(\n    route: string,\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    data: PrivateRouteInfo\n  ): Promise<void> {\n    this.isFallback = false\n\n    this.route = route\n    this.pathname = pathname\n    this.query = query\n    this.asPath = as\n    return this.notify(data)\n  }\n\n  /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */\n  beforePopState(cb: BeforePopStateCallback) {\n    this._bps = cb\n  }\n\n  onlyAHashChange(as: string): boolean {\n    if (!this.asPath) return false\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#')\n    const [newUrlNoHash, newHash] = as.split('#')\n\n    // Makes sure we scroll to the provided hash if the url/hash are the same\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true\n    }\n\n    // If the urls are change, there's more than a hash change\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false\n    }\n\n    // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n    return oldHash !== newHash\n  }\n\n  scrollToHash(as: string): void {\n    const [, hash] = as.split('#')\n    // Scroll to top if the hash is just `#` with no value\n    if (hash === '') {\n      window.scrollTo(0, 0)\n      return\n    }\n\n    // First we check if the element by id is found\n    const idEl = document.getElementById(hash)\n    if (idEl) {\n      idEl.scrollIntoView()\n      return\n    }\n    // If there's no element with the id, we check the `name` property\n    // To mirror browsers\n    const nameEl = document.getElementsByName(hash)[0]\n    if (nameEl) {\n      nameEl.scrollIntoView()\n    }\n  }\n\n  urlIsNew(asPath: string): boolean {\n    return this.asPath !== asPath\n  }\n\n  _resolveHref(parsedHref: UrlObject, pages: string[]) {\n    const { pathname } = parsedHref\n    const cleanPathname = denormalizePagePath(delBasePath(pathname!))\n\n    if (cleanPathname === '/404' || cleanPathname === '/_error') {\n      return parsedHref\n    }\n\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname!)) {\n      // eslint-disable-next-line array-callback-return\n      pages.some((page) => {\n        if (\n          isDynamicRoute(page) &&\n          getRouteRegex(page).re.test(cleanPathname!)\n        ) {\n          parsedHref.pathname = addBasePath(page)\n          return true\n        }\n      })\n    }\n    return parsedHref\n  }\n\n  /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */\n  async prefetch(\n    url: string,\n    asPath: string = url,\n    options: PrefetchOptions = {}\n  ): Promise<void> {\n    let parsed = parseRelativeUrl(url)\n\n    let { pathname } = parsed\n\n    const pages = await this.pageLoader.getPageList()\n\n    parsed = this._resolveHref(parsed, pages) as typeof parsed\n\n    if (parsed.pathname !== pathname) {\n      pathname = parsed.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    // Prefetch is not supported in development mode because it would trigger on-demand-entries\n    if (process.env.NODE_ENV !== 'production') {\n      return\n    }\n\n    const route = removePathTrailingSlash(pathname)\n    await Promise.all([\n      this.pageLoader.prefetchData(url, asPath),\n      this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),\n    ])\n  }\n\n  async fetchComponent(route: string): Promise<GoodPageCache> {\n    let cancelled = false\n    const cancel = (this.clc = () => {\n      cancelled = true\n    })\n\n    const componentResult = await this.pageLoader.loadPage(route)\n\n    if (cancelled) {\n      const error: any = new Error(\n        `Abort fetching component for route: \"${route}\"`\n      )\n      error.cancelled = true\n      throw error\n    }\n\n    if (cancel === this.clc) {\n      this.clc = null\n    }\n\n    return componentResult\n  }\n\n  _getData<T>(fn: () => Promise<T>): Promise<T> {\n    let cancelled = false\n    const cancel = () => {\n      cancelled = true\n    }\n    this.clc = cancel\n    return fn().then((data) => {\n      if (cancel === this.clc) {\n        this.clc = null\n      }\n\n      if (cancelled) {\n        const err: any = new Error('Loading initial props cancelled')\n        err.cancelled = true\n        throw err\n      }\n\n      return data\n    })\n  }\n\n  _getStaticData(dataHref: string): Promise<object> {\n    const { href: cacheKey } = new URL(dataHref, window.location.href)\n    if (process.env.NODE_ENV === 'production' && this.sdc[cacheKey]) {\n      return Promise.resolve(this.sdc[cacheKey])\n    }\n    return fetchNextData(dataHref, this.isSsr).then((data) => {\n      this.sdc[cacheKey] = data\n      return data\n    })\n  }\n\n  _getServerData(dataHref: string): Promise<object> {\n    return fetchNextData(dataHref, this.isSsr)\n  }\n\n  getInitialProps(\n    Component: ComponentType,\n    ctx: NextPageContext\n  ): Promise<any> {\n    const { Component: App } = this.components['/_app']\n    const AppTree = this._wrapApp(App as AppComponent)\n    ctx.AppTree = AppTree\n    return loadGetInitialProps<AppContextType<Router>>(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx,\n    })\n  }\n\n  abortComponentLoad(as: string): void {\n    if (this.clc) {\n      Router.events.emit('routeChangeError', buildCancellationError(), as)\n      this.clc()\n      this.clc = null\n    }\n  }\n\n  notify(data: PrivateRouteInfo): Promise<void> {\n    return this.sub(data, this.components['/_app'].Component as AppComponent)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}