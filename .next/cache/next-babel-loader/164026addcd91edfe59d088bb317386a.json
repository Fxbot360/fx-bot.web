{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.searchParamsToUrlQuery = searchParamsToUrlQuery;\nexports.urlQueryToSearchParams = urlQueryToSearchParams;\nexports.assign = assign;\nfunction searchParamsToUrlQuery(searchParams) {\n  const query = {};\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value;\n    } else if (Array.isArray(query[key])) {\n      ;\n      query[key].push(value);\n    } else {\n      query[key] = [query[key], value];\n    }\n  });\n  return query;\n}\nfunction urlQueryToSearchParams(urlQuery) {\n  const result = new URLSearchParams();\n  Object.entries(urlQuery).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      value.forEach(item => result.append(key, item));\n    } else {\n      result.set(key, value);\n    }\n  });\n  return result;\n}\nfunction assign(target, ...searchParamsList) {\n  searchParamsList.forEach(searchParams => {\n    Array.from(searchParams.keys()).forEach(key => target.delete(key));\n    searchParams.forEach((value, key) => target.append(key, value));\n  });\n  return target;\n}","map":{"version":3,"sources":["../../../../../next-server/lib/router/utils/querystring.ts"],"names":["searchParamsToUrlQuery","searchParams","query","forEach","value","key","Array","isArray","push","urlQueryToSearchParams","urlQuery","result","URLSearchParams","Object","entries","item","append","set","assign","target","searchParamsList","from","keys","delete"],"mappings":";;;;;;AAEO,SAASA,sBAAT,CACLC,YADK,EAEW;EAChB,MAAMC,KAAqB,GAAG,CAAA,CAA9B;EACAD,YAAY,CAACE,OAAbF,CAAqB,CAACG,KAAD,EAAQC,GAAR,KAAgB;IACnC,IAAI,OAAOH,KAAK,CAACG,GAAD,CAAZ,KAAsB,WAA1B,EAAuC;MACrCH,KAAK,CAACG,GAAD,CAALH,GAAaE,KAAbF;IACD,CAFD,MAEO,IAAII,KAAK,CAACC,OAAND,CAAcJ,KAAK,CAACG,GAAD,CAAnBC,CAAJ,EAA+B;MACpC;MAAEJ,KAAK,CAACG,GAAD,CAAN,CAAyBG,IAAzB,CAA8BJ,KAA9B,CAAA;IACF,CAFM,MAEA;MACLF,KAAK,CAACG,GAAD,CAALH,GAAa,CAACA,KAAK,CAACG,GAAD,CAAN,EAAuBD,KAAvB,CAAbF;IACD;EACF,CARDD,CAAAA;EASA,OAAOC,KAAP;AACD;AAEM,SAASO,sBAAT,CACLC,QADK,EAEY;EACjB,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAA,CAAf;EACAC,MAAM,CAACC,OAAPD,CAAeH,QAAfG,CAAAA,CAAyBV,OAAzBU,CAAiC,CAAC,CAACR,GAAD,EAAMD,KAAN,CAAD,KAAkB;IACjD,IAAIE,KAAK,CAACC,OAAND,CAAcF,KAAdE,CAAJ,EAA0B;MACxBF,KAAK,CAACD,OAANC,CAAeW,IAAD,IAAUJ,MAAM,CAACK,MAAPL,CAAcN,GAAdM,EAAmBI,IAAnBJ,CAAxBP,CAAAA;IACD,CAFD,MAEO;MACLO,MAAM,CAACM,GAAPN,CAAWN,GAAXM,EAAgBP,KAAhBO,CAAAA;IACD;EACF,CANDE,CAAAA;EAOA,OAAOF,MAAP;AACD;AAEM,SAASO,MAAT,CACLC,MADK,EAEL,GAAGC,gBAFE,EAGY;EACjBA,gBAAgB,CAACjB,OAAjBiB,CAA0BnB,YAAD,IAAkB;IACzCK,KAAK,CAACe,IAANf,CAAWL,YAAY,CAACqB,IAAbrB,CAAAA,CAAXK,CAAAA,CAAgCH,OAAhCG,CAAyCD,GAAD,IAASc,MAAM,CAACI,MAAPJ,CAAcd,GAAdc,CAAjDb,CAAAA;IACAL,YAAY,CAACE,OAAbF,CAAqB,CAACG,KAAD,EAAQC,GAAR,KAAgBc,MAAM,CAACH,MAAPG,CAAcd,GAAdc,EAAmBf,KAAnBe,CAArClB,CAAAA;EACD,CAHDmB,CAAAA;EAIA,OAAOD,MAAP;AACD","sourcesContent":["import { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(query[key])) {\n      ;(query[key] as string[]).push(value)\n    } else {\n      query[key] = [query[key] as string, value]\n    }\n  })\n  return query\n}\n\nexport function urlQueryToSearchParams(\n  urlQuery: ParsedUrlQuery\n): URLSearchParams {\n  const result = new URLSearchParams()\n  Object.entries(urlQuery).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      value.forEach((item) => result.append(key, item))\n    } else {\n      result.set(key, value)\n    }\n  })\n  return result\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  searchParamsList.forEach((searchParams) => {\n    Array.from(searchParams.keys()).forEach((key) => target.delete(key))\n    searchParams.forEach((value, key) => target.append(key, value))\n  })\n  return target\n}\n"]},"metadata":{},"sourceType":"script"}