{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = initHeadManager;\nvar DOMAttributeNames = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv'\n};\nfunction reactElementToDOM(_ref) {\n  var type = _ref.type,\n    props = _ref.props;\n  var el = document.createElement(type);\n  for (var p in props) {\n    if (!props.hasOwnProperty(p)) continue;\n    if (p === 'children' || p === 'dangerouslySetInnerHTML') continue; // we don't render undefined props to the DOM\n    if (props[p] === undefined) continue;\n    var attr = DOMAttributeNames[p] || p.toLowerCase();\n    el.setAttribute(attr, props[p]);\n  }\n  var children = props.children,\n    dangerouslySetInnerHTML = props.dangerouslySetInnerHTML;\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || '';\n  } else if (children) {\n    el.textContent = typeof children === 'string' ? children : children.join('');\n  }\n  return el;\n}\nfunction updateElements(type, components) {\n  var headEl = document.getElementsByTagName('head')[0];\n  var headCountEl = headEl.querySelector('meta[name=next-head-count]');\n  if (true) {\n    if (!headCountEl) {\n      console.error('Warning: next-head-count is missing. https://err.sh/next.js/next-head-count-missing');\n      return;\n    }\n  }\n  var headCount = Number(headCountEl.content);\n  var oldTags = [];\n  for (var i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = j.previousElementSibling) {\n    if (j.tagName.toLowerCase() === type) {\n      oldTags.push(j);\n    }\n  }\n  var newTags = components.map(reactElementToDOM).filter(function (newTag) {\n    for (var k = 0, len = oldTags.length; k < len; k++) {\n      var oldTag = oldTags[k];\n      if (oldTag.isEqualNode(newTag)) {\n        oldTags.splice(k, 1);\n        return false;\n      }\n    }\n    return true;\n  });\n  oldTags.forEach(function (t) {\n    return t.parentNode.removeChild(t);\n  });\n  newTags.forEach(function (t) {\n    return headEl.insertBefore(t, headCountEl);\n  });\n  headCountEl.content = (headCount - oldTags.length + newTags.length).toString();\n}\nfunction initHeadManager() {\n  var updatePromise = null;\n  return {\n    mountedInstances: new Set(),\n    updateHead: function updateHead(head) {\n      var promise = updatePromise = Promise.resolve().then(function () {\n        if (promise !== updatePromise) return;\n        updatePromise = null;\n        var tags = {};\n        head.forEach(function (h) {\n          var components = tags[h.type] || [];\n          components.push(h);\n          tags[h.type] = components;\n        });\n        var titleComponent = tags.title ? tags.title[0] : null;\n        var title = '';\n        if (titleComponent) {\n          var children = titleComponent.props.children;\n          title = typeof children === 'string' ? children : children.join('');\n        }\n        if (title !== document.title) document.title = title;\n        ['meta', 'base', 'link', 'style', 'script'].forEach(function (type) {\n          updateElements(type, tags[type] || []);\n        });\n      });\n    }\n  };\n}","map":{"version":3,"sources":["../../client/head-manager.ts"],"names":["DOMAttributeNames","acceptCharset","className","htmlFor","httpEquiv","reactElementToDOM","type","props","el","document","createElement","p","hasOwnProperty","undefined","attr","toLowerCase","setAttribute","children","dangerouslySetInnerHTML","innerHTML","__html","textContent","join","updateElements","components","headEl","getElementsByTagName","headCountEl","querySelector","console","error","headCount","Number","content","oldTags","i","j","previousElementSibling","tagName","push","newTags","map","filter","newTag","k","len","length","oldTag","isEqualNode","splice","forEach","t","parentNode","removeChild","insertBefore","toString","initHeadManager","updatePromise","mountedInstances","Set","updateHead","head","promise","Promise","resolve","then","tags","h","titleComponent","title"],"mappings":"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","sourcesContent":["const DOMAttributeNames: Record<string, string> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n}\n\nfunction reactElementToDOM({ type, props }: JSX.Element): HTMLElement {\n  const el = document.createElement(type)\n  for (const p in props) {\n    if (!props.hasOwnProperty(p)) continue\n    if (p === 'children' || p === 'dangerouslySetInnerHTML') continue\n\n    // we don't render undefined props to the DOM\n    if (props[p] === undefined) continue\n\n    const attr = DOMAttributeNames[p] || p.toLowerCase()\n    el.setAttribute(attr, props[p])\n  }\n\n  const { children, dangerouslySetInnerHTML } = props\n  if (dangerouslySetInnerHTML) {\n    el.innerHTML = dangerouslySetInnerHTML.__html || ''\n  } else if (children) {\n    el.textContent = typeof children === 'string' ? children : children.join('')\n  }\n  return el\n}\n\nfunction updateElements(type: string, components: JSX.Element[]) {\n  const headEl = document.getElementsByTagName('head')[0]\n  const headCountEl: HTMLMetaElement = headEl.querySelector(\n    'meta[name=next-head-count]'\n  ) as HTMLMetaElement\n  if (process.env.NODE_ENV !== 'production') {\n    if (!headCountEl) {\n      console.error(\n        'Warning: next-head-count is missing. https://err.sh/next.js/next-head-count-missing'\n      )\n      return\n    }\n  }\n\n  const headCount = Number(headCountEl.content)\n  const oldTags: Element[] = []\n\n  for (\n    let i = 0, j = headCountEl.previousElementSibling;\n    i < headCount;\n    i++, j = j!.previousElementSibling\n  ) {\n    if (j!.tagName.toLowerCase() === type) {\n      oldTags.push(j!)\n    }\n  }\n  const newTags = (components.map(reactElementToDOM) as HTMLElement[]).filter(\n    (newTag) => {\n      for (let k = 0, len = oldTags.length; k < len; k++) {\n        const oldTag = oldTags[k]\n        if (oldTag.isEqualNode(newTag)) {\n          oldTags.splice(k, 1)\n          return false\n        }\n      }\n      return true\n    }\n  )\n\n  oldTags.forEach((t) => t.parentNode!.removeChild(t))\n  newTags.forEach((t) => headEl.insertBefore(t, headCountEl))\n  headCountEl.content = (headCount - oldTags.length + newTags.length).toString()\n}\n\nexport default function initHeadManager() {\n  let updatePromise: Promise<void> | null = null\n\n  return {\n    mountedInstances: new Set(),\n    updateHead: (head: JSX.Element[]) => {\n      const promise = (updatePromise = Promise.resolve().then(() => {\n        if (promise !== updatePromise) return\n\n        updatePromise = null\n        const tags: Record<string, JSX.Element[]> = {}\n\n        head.forEach((h) => {\n          const components = tags[h.type] || []\n          components.push(h)\n          tags[h.type] = components\n        })\n\n        const titleComponent = tags.title ? tags.title[0] : null\n        let title = ''\n        if (titleComponent) {\n          const { children } = titleComponent.props\n          title = typeof children === 'string' ? children : children.join('')\n        }\n        if (title !== document.title) document.title = title\n        ;['meta', 'base', 'link', 'style', 'script'].forEach((type) => {\n          updateElements(type, tags[type] || [])\n        })\n      }))\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"script"}