{"ast":null,"code":"var __jsx = React.createElement;\n/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport React, { useCallback } from 'react';\nimport Sticky from 'react-stickynode';\nimport { useStickyState } from 'contexts/app/app.provider';\nimport { Waypoint } from 'react-waypoint';\nimport { useStickyDispatch } from 'contexts/app/app.provider';\nimport Header from './header/header';\nimport Footer from './footer/footer';\nexport default function Layout(_ref) {\n  var children = _ref.children;\n  var isSticky = useStickyState('isSticky');\n  var dispatch = useStickyDispatch();\n  var setSticky = useCallback(function () {\n    return dispatch({\n      type: 'SET_STICKY'\n    });\n  }, [dispatch]);\n  var removeSticky = useCallback(function () {\n    return dispatch({\n      type: 'REMOVE_STICKY'\n    });\n  }, [dispatch]);\n  var onWaypointPositionChange = function onWaypointPositionChange(_ref2) {\n    var currentPosition = _ref2.currentPosition;\n    if (currentPosition === 'above') {\n      setSticky();\n    }\n    if (currentPosition === 'below') {\n      removeSticky();\n    }\n  };\n  return jsx(React.Fragment, null, jsx(Sticky, {\n    enabled: isSticky,\n    innerZ: 991\n  }, jsx(Header, {\n    className: \"\".concat(isSticky ? 'sticky' : 'unSticky')\n  })), jsx(Waypoint, {\n    onEnter: removeSticky\n    // onLeave={setSticky}\n    ,\n    onPositionChange: onWaypointPositionChange\n  }), jsx(\"main\", {\n    sx: {\n      variant: 'layout.main'\n    }\n  }, children), jsx(Footer, null));\n}","map":null,"metadata":{},"sourceType":"module"}