{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nvar BaseAccordion = /*#__PURE__*/function (_React$Component) {\n  _inherits(BaseAccordion, _React$Component);\n  var _super = _createSuper(BaseAccordion);\n  function BaseAccordion() {\n    var _this;\n    _classCallCheck(this, BaseAccordion);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      openIndexes: [0]\n    });\n    _defineProperty(_assertThisInitialized(_this), \"handleItemClick\", function (index) {\n      _this.internalSetState(function (state) {\n        var closing = state.openIndexes.includes(index);\n        return {\n          type: closing ? 'closing' : 'opening',\n          openIndexes: closing ? state.openIndexes.filter(function (i) {\n            return i !== index;\n          }) : [].concat(_toConsumableArray(state.openIndexes), [index])\n        };\n      });\n      console.log('clicked');\n    });\n    return _this;\n  }\n  _createClass(BaseAccordion, [{\n    key: \"getState\",\n    value: function getState() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;\n      return {\n        openIndexes: this.props.openIndexes === undefined ? state.openIndexes : this.props.openIndexes\n      };\n    }\n  }, {\n    key: \"internalSetState\",\n    value: function internalSetState(changes) {\n      var _this2 = this;\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n      var allChanges;\n      this.setState(function (state) {\n        var actualState = _this2.getState(state);\n        var changesObject = typeof changes === 'function' ? changes(actualState) : changes;\n        allChanges = _this2.props.stateReducer(actualState, changesObject);\n        return allChanges;\n      }, function () {\n        _this2.props.onStateChange(allChanges);\n        callback();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children({\n        openIndexes: this.getState().openIndexes,\n        handleItemClick: this.handleItemClick\n      });\n    }\n  }]);\n  return BaseAccordion;\n}(React.Component);\n_defineProperty(BaseAccordion, \"defaultProps\", {\n  stateReducer: function stateReducer(state, changes) {\n    return changes;\n  },\n  onStateChange: function onStateChange() {}\n});\nexport { BaseAccordion };","map":null,"metadata":{},"sourceType":"module"}